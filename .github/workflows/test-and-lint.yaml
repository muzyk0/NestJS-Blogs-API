name: Test & Lint #Название pipeline который будет выполнять github actions

on:
  push:
    branches:
      - '*'
      - '!staging'

jobs:
  tests:
    name: Tests
    defaults:
      run:
        working-directory: ./
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test

  tests-e2e:
    name: E2E Tests
    defaults:
      run:
        working-directory: ./
    runs-on: ubuntu-latest
    needs: tests
    env:
      POSTGRESQL_URI:  ${{secrets.POSTGRESQL_URI}}
      ACCESS_TOKEN_SECRET_EXPIRES_IN:  ${{secrets.ACCESS_TOKEN_EXPIRES_IN}}
      ACCESS_TOKEN_SECRET:  ${{secrets.ACCESS_TOKEN_SECRET}}
      REFRESH_TOKEN_SECRET_EXPIRES_IN:  ${{secrets.REFRESH_TOKEN_EXPIRES_IN}}
      REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
      EMAIL_FROM: ${{secrets.EMAIL_FROM}}
      EMAIL_FROM_PASSWORD: ${{secrets.EMAIL_FROM_PASSWORD}}
      ENABLE_CLEAR_DB_ENDPOINT: ${{secrets.ENABLE_CLEAR_DB_ENDPOINT}}
      IP_RESTRICTION_LIMIT: ${{secrets.IP_RESTRICTION_LIMIT}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test:e2e

  lint:
    name: Lint
    defaults:
      run:
        working-directory: ./
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint:check